- Class: meta
  Course: R_Programming_UA_ENG
  Lesson: Looking at Data
  Author: Nick Carchedi - переклад (oleksandkov | AI)
  Type: Standard
  Organization: JHU Biostat
  Version: 2.2.11

- Class: text
  Output: |
    Словник:
    
    1 —
    
    2 — 
    
    3 —

- Class: text
  Output: "Коли ти працюєш із новим набором даних, перше, що треба зробити — це подивитися на нього! Який формат даних? Які розміри? Які імена змінних? Як зберігаються змінні? Чи є пропущені дані? Чи є якісь недоліки в даних?"

- Class: text
  Output: "У цьому уроці ти навчишся відповідати на ці й інші питання за допомогою вбудованих функцій R. Ми будемо використовувати набір даних, створений на основі PLANTS Database Департаменту сільського господарства США (http://plants.usda.gov/adv_search.html)."

- Class: cmd_question
  Output: "Я вже зберегла дані для тебе у змінній з назвою plants. Введи ls(), щоб переглянути змінні у своєму робочому просторі. Серед них має бути plants."
  CorrectAnswer: ls()
  AnswerTests: omnitest(correctExpr='ls()')
  Hint: "Використай ls(), щоб переглянути змінні у своєму робочому просторі."

- Class: cmd_question
  Output: "Почнемо з перевірки класу змінної plants за допомогою class(plants). Це дасть нам підказку щодо загальної структури даних."
  CorrectAnswer: class(plants)
  AnswerTests: omnitest(correctExpr='class(plants)')
  Hint: "Використай class(plants), щоб дізнатися клас змінної plants."

- Class: text
  Output: "Дуже часто дані зберігаються у data frame. Це стандартний клас для даних, які читаються в R за допомогою функцій, як-от read.csv() та read.table(), про які ти дізнаєшся в іншому уроці."

- Class: cmd_question
  Output: "Оскільки набір даних зберігається у data frame, ми знаємо, що це прямокутна структура. Тобто, вона має дві виміри (рядки й стовпці) і легко вписується у таблицю або електронну таблицю. Використай dim(plants), щоб точно дізнатися, скільки рядків і стовпців у нас є."
  CorrectAnswer: dim(plants)
  AnswerTests: omnitest(correctExpr='dim(plants)')
  Hint: "Використай dim(plants), щоб дізнатися точні розміри набору даних plants."

- Class: text
  Output: "Перше число, яке ти побачиш (5166), — це кількість рядків (спостережень), а друге (10) — кількість стовпців (змінних)."

- Class: cmd_question
  Output: "Ти також можеш використати nrow(plants), щоб побачити лише кількість рядків. Спробуй це."
  CorrectAnswer: nrow(plants)
  AnswerTests: omnitest(correctExpr='nrow(plants)')
  Hint: "Використай nrow(plants), щоб побачити лише кількість рядків."

- Class: cmd_question
  Output: "... А ncol(plants) — щоб побачити тільки кількість стовпців."
  CorrectAnswer: ncol(plants)
  AnswerTests: omnitest(correctExpr='ncol(plants)')
  Hint: "Використай ncol(plants), щоб побачити лише кількість стовпців."

- Class: cmd_question
  Output: "Якщо ти цікавишся, скільки пам’яті займає набір даних, скористайся object.size(plants)."
  CorrectAnswer: object.size(plants)
  AnswerTests: omnitest(correctExpr='object.size(plants)')
  Hint: "object.size(plants) покаже, скільки пам’яті займає даний data frame plants."

- Class: cmd_question
  Output: "Тепер, коли ми знаємо форму і розмір даних, давай подивимося, що всередині. names(plants) поверне вектор з іменами стовпців (тобто змінних). Спробуй!"
  CorrectAnswer: names(plants)
  AnswerTests: omnitest(correctExpr='names(plants)')
  Hint: "names(plants) повертає вектор з іменами стовпців (змінних)."

- Class: text
  Output: "Ми дали цьому набору даних досить описові імена змінних, але так буває не завжди. Логічний наступний крок — зазирнути у самі дані. Однак набір містить понад 5000 спостережень (рядків), тому переглядати всі дані одразу недоцільно."

- Class: cmd_question
  Output: "Функція head() дозволяє побачити початок набору даних. Спробуй її з одним аргументом."
  CorrectAnswer: head(plants)
  AnswerTests: omnitest(correctExpr='head(plants)')
  Hint: "head(plants) покаже тобі верхню частину набору даних."

- Class: text
  Output: "Приділи хвилину, щоб розглянути результат вище. Кожен рядок має номер спостереження, а кожен стовпець — ім'я змінної. Можливо, твій екран недостатньо широкий, щоб побачити всі 10 стовпців одразу, тож R показує стільки, скільки може, а решта переходить на наступний рядок."

- Class: cmd_question
  Output: "За замовчуванням head() показує перші шість рядків даних. Це можна змінити, вказавши другим аргументом кількість рядків для перегляду. Використай head(), щоб побачити перші 10 рядків plants."
  CorrectAnswer: head(plants, 10)
  AnswerTests: omnitest(correctExpr='head(plants, 10)')
  Hint: "head(plants, 10) покаже тобі перші 10 рядків набору даних."

- Class: cmd_question
  Output: "Те саме працює й для tail() — щоб побачити кінець набору даних. Використай tail(), щоб переглянути останні 15 рядків."
  CorrectAnswer: tail(plants, 15)
  AnswerTests: omnitest(correctExpr='tail(plants, 15)')
  Hint: "tail(plants, 15) покаже тобі останні 15 рядків набору даних."

- Class: cmd_question
  Output: "Після перегляду початку й кінця даних ти, мабуть, помітила багато NA — це позначення пропущених значень у R. Використай summary(plants), щоб краще зрозуміти, як розподілені змінні і скільки у нас пропусків."
  CorrectAnswer: summary(plants)
  AnswerTests: omnitest(correctExpr='summary(plants)')
  Hint: "Спробуй summary(plants), щоб подивитися на розподіл змінних і дізнатися, скільки пропущених значень у даних."

- Class: text
  Output: "summary() дає різний результат для кожної змінної залежно від її класу. Для числових змінних, наприклад Precip_Min, summary() покаже мінімум, 1-й квартиль, медіану, середнє, 3-й квартиль і максимум. Ці значення допомагають зрозуміти розподіл даних."

- Class: text
  Output: "Для категоріальних змінних (у R — це 'factor'), summary() показує, скільки разів кожне значення (або 'рівень') зустрічається у даних. Наприклад, кожне значення Scientific_Name трапляється лише раз, бо унікальне для кожної рослини. А для Duration (також factor) summary показує, що у нас у наборі 3031 багаторічна рослина, 682 однорічних тощо."

- Class: cmd_question
  Output: "Як видно, для Active_Growth_Period у summary R скоротила вивід, додавши категорію 'Other'. Оскільки це категоріальна/factor-змінна, ми можемо побачити, скільки разів кожне значення трапляється у даних, за допомогою table(plants$Active_Growth_Period)."
  CorrectAnswer: table(plants$Active_Growth_Period)
  AnswerTests: omnitest(correctExpr='table(plants$Active_Growth_Period)')
  Hint: "table(plants$Active_Growth_Period) покаже кількість для кожного рівня факторної змінної."

- Class: text
  Output: "Кожна з функцій, які ми розглянули вище, допоможе краще зрозуміти структуру твоїх даних. Але найкраще ми залишили наостанок..."

- Class: cmd_question
  Output: "Можливо, найкорисніша і найлаконічніша функція для розуміння структури даних — це str(). Використай її зараз."
  CorrectAnswer: str(plants)
  AnswerTests: omnitest(correctExpr='str(plants)')
  Hint: "Використай str(plants), щоб подивитися на структуру твоїх даних."

- Class: text
  Output: "Перевага str() у тому, що вона поєднує можливості багатьох інших функцій у стислому і зручному вигляді. На самому початку вона повідомляє, що клас plants — це 'data.frame', і що він містить 5166 спостережень і 10 змінних. Далі — ім’я й клас кожної змінної, а також коротка вибірка її значень."

- Class: text
  Output: "str() — це взагалі дуже універсальна функція, яку можна використовувати для більшості об'єктів у R. Коли хочеш зрозуміти структуру чогось (набору даних, функції тощо), str() — гарний старт."

- Class: text
  Output: "У цьому уроці ти навчилася швидко ознайомлюватись зі структурою та вмістом нового набору даних за допомогою простих і корисних функцій. Витративши час на це на старті, ти збережеш час і нерви під час подальшого аналізу."

- Class: mult_question
  Output: "Бажаєш повідомити когось про успішне завершення цього уроку?"
  CorrectAnswer: NULL
  AnswerChoices: Так; Ні
  AnswerTests: notify()
  Hint: NULL


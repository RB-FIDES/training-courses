- Class: meta
  Course: R Programming
  Lesson: Dates and Times
  Author: Nick Carchedi
  Type: Standard
  Organization: JHU Biostat
  Version: 2.2.11

- Class: text
  Output: Сашу, R має особливий спосіб представлення дат і часу, що може бути корисним, якщо ти працюєш з даними, які показують, як щось змінюється з часом (тобто time-series data - дані часових рядів) або якщо твої дані містять іншу темпоральну інформацію, наприклад дати народження.

- Class: text
  Output: Дати представлені класом 'Date' (дата), а час представлений класами 'POSIXct' і 'POSIXlt' (формати часу). Внутрішньо дати зберігаються як кількість днів з 1970-01-01, а час зберігається як кількість секунд з 1970-01-01 (для 'POSIXct') або як список секунд, хвилин, годин тощо (для 'POSIXlt').

- Class: cmd_question
  Output: Почнемо з використання d1 <- Sys.Date() щоб отримати поточну дату і зберегти її у змінній (variable) d1. (Це літера 'd' і цифра 1.)
  CorrectAnswer: d1 <- Sys.Date()
  AnswerTests: omnitest(correctExpr='d1 <- Sys.Date()')
  Hint: Набери d1 <- Sys.Date() щоб отримати поточну дату і зберегти її у новій змінній під назвою d1.

- Class: cmd_question
  Output: Використай функцію class() щоб підтвердити, що d1 є об'єктом Date.
  CorrectAnswer: class(d1)
  AnswerTests: omnitest(correctExpr='class(d1)')
  Hint: class(d1) покаже тобі клас (тип) змінної d1.

- Class: cmd_question
  Output: Ми можемо використати функцію unclass() щоб побачити, як d1 виглядає внутрішньо. Спробуй це.
  CorrectAnswer: unclass(d1)
  AnswerTests: omnitest(correctExpr='unclass(d1)')
  Hint: Використай unclass(d1) щоб побачити, як d1 виглядає внутрішньо.

- Class: text
  Output: Це точна кількість днів з 1970-01-01!

- Class: cmd_question
  Output: Однак, якщо ти виведеш d1 на консоль, ти отримаєш сьогоднішню дату -- РІК-МІСЯЦЬ-ДЕНЬ. Спробуй це.
  CorrectAnswer: d1
  AnswerTests: omnitest(correctExpr='d1')
  Hint: Набери d1 щоб вивести її вміст.

- Class: cmd_question
  Output: А що, якщо нам потрібно посилатися на дату до 1970-01-01? Створи змінну d2, що містить as.Date("1969-01-01").
  CorrectAnswer: d2 <- as.Date("1969-01-01")
  AnswerTests: omnitest(correctExpr='d2 <- as.Date("1969-01-01")')
  Hint: Спробуй d2 <- as.Date("1969-01-01").

- Class: cmd_question
  Output: Тепер використай unclass() знову, щоб побачити, як d2 виглядає внутрішньо.
  CorrectAnswer: unclass(d2)
  AnswerTests: omnitest(correctExpr='unclass(d2)')
  Hint: unclass(d2) покаже тобі, як d2 виглядає внутрішньо.

- Class: text
  Output: Як ти могла очікувати, ти отримуєш від'ємне число. У цьому випадку це -365, оскільки 1969-01-01 це рівно один календарний рік (тобто 365 днів) ДО 1970-01-01.

- Class: cmd_question
  Output: Тепер давай подивимося, як R зберігає час. Ти можеш отримати доступ до поточної дати та часу, використовуючи функцію Sys.time() без аргументів (arguments). Зроби це і збережи результат у змінній під назвою t1.
  CorrectAnswer: t1 <- Sys.time()
  AnswerTests: omnitest(correctExpr='t1 <- Sys.time()')
  Hint: t1 <- Sys.time() збереже поточну дату і час у змінній під назвою t1.

- Class: cmd_question
  Output: Переглянь вміст t1.
  CorrectAnswer: t1
  AnswerTests: omnitest(correctExpr='t1')
  Hint: Набери t1 щоб переглянути її вміст.

- Class: cmd_question
  Output: І перевір class() змінної t1.
  CorrectAnswer: class(t1)
  AnswerTests: omnitest(correctExpr='class(t1)')
  Hint: Переглянь клас t1 за допомогою class(t1).

- Class: cmd_question
  Output: Як згадувалося раніше, POSIXct це лише один з двох способів, якими R представляє інформацію про час. (Ти можеш ігнорувати друге значення вище, POSIXt, яке просто функціонує як спільна мова між POSIXct і POSIXlt.) Використай unclass() щоб побачити, як t1 виглядає внутрішньо -- (велике) число секунд з початку 1970 року.
  CorrectAnswer: unclass(t1)
  AnswerTests: omnitest(correctExpr='unclass(t1)')
  Hint: Використай unclass(t1) щоб побачити, скільки секунд минуло з початку 1970 року.

- Class: cmd_question
  Output: За замовчуванням Sys.time() повертає об'єкт класу POSIXct, але ми можемо привести (coerce) результат до POSIXlt за допомогою as.POSIXlt(Sys.time()). Спробуй це і збережи результат у t2.
  CorrectAnswer: t2 <- as.POSIXlt(Sys.time())
  AnswerTests: omnitest(correctExpr='t2 <- as.POSIXlt(Sys.time())')
  Hint: t2 <- as.POSIXlt(Sys.time()) приведе результат Sys.time до 'POSIXlt' і збереже результат.

- Class: cmd_question
  Output: Перевір клас t2.
  CorrectAnswer: class(t2)
  AnswerTests: omnitest(correctExpr='class(t2)')
  Hint: Набери class(t2) щоб переглянути її клас.

- Class: cmd_question
  Output: Тепер переглянь її вміст.
  CorrectAnswer: t2
  AnswerTests: omnitest(correctExpr='t2')
  Hint: Набери t2 щоб переглянути її вміст.

- Class: cmd_question
  Output: Друкований формат t2 ідентичний до формату t1. Тепер застосуй unclass() до t2, щоб побачити, чим вона відрізняється внутрішньо.
  CorrectAnswer: unclass(t2)
  AnswerTests: omnitest(correctExpr='unclass(t2)')
  Hint: Використай unclass(t2) щоб переглянути її внутрішню структуру.

- Class: cmd_question
  Output: t2, як і всі об'єкти POSIXlt, це просто список значень, які складають дату і час. Використай str(unclass(t2)) щоб отримати більш компактний вигляд.
  CorrectAnswer: str(unclass(t2))
  AnswerTests: omnitest(correctExpr='str(unclass(t2))')
  Hint: Використай str(unclass(t2)) щоб переглянути її внутрішню структуру у більш компактному вигляді.

- Class: cmd_question
  Output: Якщо, наприклад, ми хочемо лише хвилини з часу, збереженого в t2, ми можемо отримати до них доступ за допомогою t2$min. Спробуй це.
  CorrectAnswer: t2$min
  AnswerTests: omnitest(correctExpr='t2$min')
  Hint: t2$min дасть тобі кількість хвилин з часу, збереженого в t2.

- Class: text
  Output: Тепер, коли ми дослідили всі три типи об'єктів дати і часу, давай подивимося на кілька функцій, які витягують корисну інформацію з будь-якого з цих об'єктів -- weekdays() (дні тижня), months() (місяці) та quarters() (квартали).

- Class: cmd_question
  Output: Функція weekdays() поверне день тижня з будь-якого об'єкта дати або часу. Спробуй її на d1, який є об'єктом Date, що містить сьогоднішню дату.
  CorrectAnswer: weekdays(d1)
  AnswerTests: omnitest(correctExpr='weekdays(d1)')
  Hint: Спробуй weekdays(d1) щоб отримати день тижня.

- Class: cmd_question
  Output: Функція months() також працює з будь-яким об'єктом дати або часу. Спробуй її на t1, який є об'єктом POSIXct, що містить поточний час (ну, це був поточний час, коли ти його створила).
  CorrectAnswer: months(t1)
  AnswerTests: omnitest(correctExpr='months(t1)')
  Hint: months(t1) дасть тобі поточний місяць.

- Class: cmd_question
  Output: Функція quarters() повертає квартал року (Q1-Q4) з будь-якого об'єкта дати або часу. Спробуй її на t2, який є об'єктом POSIXlt, що містить час, коли ти його створила.
  CorrectAnswer: quarters(t2)
  AnswerTests: omnitest(correctExpr='quarters(t2)')
  Hint: quarters(t2) дасть тобі поточний квартал.

- Class: text
  Output: Часто дати і час у наборі даних (dataset) будуть у форматі, який R не розпізнає. У цій ситуації може бути корисною функція strptime().

- Class: text
  Output: strptime() перетворює символьні вектори (character vectors) в POSIXlt. У цьому сенсі вона схожа на as.POSIXlt(), за винятком того, що вхідні дані не повинні бути у певному форматі (YYYY-MM-DD).

- Class: cmd_question
  Output: 'Щоб побачити, як це працює, збережи наступний символьний рядок (character string) у змінній під назвою t3: "October 17, 1986 08:24" (з лапками).'
  CorrectAnswer: t3 <- "October 17, 1986 08:24"
  AnswerTests: omnitest(correctExpr='t3 <- "October 17, 1986 08:24"')
  Hint: Збережи "October 17, 1986 08:24" (включаючи лапки) у новій змінній під назвою t3.

- Class: cmd_question
  Output: 'Тепер використай strptime(t3, "%B %d, %Y %H:%M") щоб допомогти R перетворити наш об''єкт дати/часу в формат, який він розуміє. Призначи результат новій змінній під назвою t4. (Тобі варто переглянути документацію для strptime(), якщо хочеш дізнатися більше про те, як вона працює.)'
  CorrectAnswer: t4 <- strptime(t3, "%B %d, %Y %H:%M")
  AnswerTests: omnitest(correctExpr='t4 <- strptime(t3, "%B %d, %Y %H:%M")')
  Hint: 't4 <- strptime(t3, "%B %d, %Y %H:%M") перетворить наш об''єкт дати/часу в формат, який R розуміє.'

- Class: cmd_question
  Output: Виведи вміст t4.
  CorrectAnswer: t4
  AnswerTests: omnitest(correctExpr='t4')
  Hint: Набери t4 щоб вивести її вміст.

- Class: cmd_question
  Output: Це той формат, який ми очікували. Тепер давай перевіримо її class().
  CorrectAnswer: class(t4)
  AnswerTests: omnitest(correctExpr='class(t4)')
  Hint: Набери class(t4) щоб перевірити її клас.

- Class: text
  Output: Нарешті, існує низка операцій, які ти можеш виконувати з датами і часом, включаючи арифметичні операції (+ і -) та порівняння (<, ==, тощо).

- Class: cmd_question
  Output: "Змінна t1 містить час, коли ти її створила (згадай, ти використовувала Sys.time()). Підтверди, що деякий час минув з тих пір, як ти створила t1, використовуючи оператор 'більше ніж' для порівняння її з поточним часом: Sys.time() > t1"
  CorrectAnswer: Sys.time() > t1
  AnswerTests: omnitest(correctExpr='Sys.time() > t1')
  Hint: Sys.time() > t1 скаже тобі, що поточний час пізніший за час, що міститься в t1 (який був поточним часом, коли ти його створила).

- Class: cmd_question
  Output: Отже, ми знаємо, що деякий час минув, але скільки? Спробуй відняти t1 від поточного часу, використовуючи Sys.time() - t1. Не забудь дужки в кінці Sys.time(), оскільки це функція.
  CorrectAnswer: Sys.time() - t1
  AnswerTests: omnitest(correctExpr='Sys.time() - t1')
  Hint: Sys.time() - t1 дасть тобі кількість часу, що минув з тих пір, як було створено t1.

- Class: text
  Output: Така ж логіка застосовується до додавання та інших операторів порівняння. Якщо ти хочеш більшого контролю над одиницями (units) при знаходженні вищезазначеної різниці в часі, ти можеш використати difftime(), яка дозволяє вказати параметр 'units'.

- Class: cmd_question
  Output: Використай difftime(Sys.time(), t1, units = 'days') щоб знайти кількість часу в ДНЯХ, що минув з тих пір, як ти створила t1.
  CorrectAnswer: difftime(Sys.time(), t1, units = 'days')
  AnswerTests: match_call("difftime(Sys.time(), t1, units = 'days')")
  Hint: difftime(Sys.time(), t1, units = 'days') скаже тобі, скільки днів минуло з тих пір, як було створено t1 (що має бути менше 1!)

- Class: text
  Output: На цьому уроці ти навчилася працювати з датами і часом в R. Хоча важливо розуміти основи, якщо ти часто працюєш з датами і часом, можливо, тобі варто переглянути пакет lubridate від Хедлі Вікхема (Hadley Wickham).

- Class: mult_question
  Output: Чи хотіла б ти повідомити комусь про успішне завершення цього уроку?
  CorrectAnswer: NULL
  AnswerChoices: Так; Ні
  AnswerTests: notify()
  Hint: NULL

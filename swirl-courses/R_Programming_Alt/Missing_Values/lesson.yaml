- Class: meta
  Course: R Programming
  Lesson: Missing Values
  Author: Nick Carchedi 
  Type: Standard
  Organization: JHU Biostat
  Version: 2.2.0

- Class: text
  Output: Missing values (пропущені значення) відіграють важливу роль у статистиці та аналізі даних. Часто пропущені значення не можна ігнорувати, а навпаки, їх слід ретельно вивчати, щоб побачити, чи є якась основна закономірність або причина їхньої відсутності.

- Class: text
  Output: В R, NA використовується для представлення будь-якого значення, яке є 'недоступним' або 'пропущеним' (у статистичному сенсі). У цьому уроці ми детальніше дослідимо пропущені значення.

- Class: cmd_question
  Output: Будь-яка операція з NA зазвичай дає NA як результат. Щоб це проілюструвати, створи вектор c(44, NA, 5, NA) і присвой його змінній x.
  CorrectAnswer: x <- c(44, NA, 5, NA)
  AnswerTests: omnitest(correctExpr='x <- c(44, NA, 5, NA)')
  Hint: Присвой вектор c(44, NA, 5, NA) змінній x. NA має бути написано великими літерами.

- Class: cmd_question
  Output: Тепер помнож x на 3.
  CorrectAnswer: x * 3
  AnswerTests: ANY_of_exprs('x * 3', '3 * x')
  Hint: Спробуй x * 3.

- Class: text
  Output: Зверни увагу, що елементи отриманого вектора, які відповідають значенням NA в x, також є NA.

- Class: cmd_question
  Output: Щоб зробити це трохи цікавіше, створи вектор, що містить 1000 випадкових значень зі стандартного нормального розподілу (standard normal distribution) за допомогою y <- rnorm(1000).
  CorrectAnswer: y <- rnorm(1000)
  AnswerTests: omnitest(correctExpr='y <- rnorm(1000)')
  Hint: Функція rnorm() генерує випадкові числа з нормального розподілу. Набери y <- rnorm(1000).

- Class: cmd_question
  Output: Далі, створи вектор, що містить 1000 NA за допомогою z <- rep(NA, 1000).
  CorrectAnswer: z <- rep(NA, 1000)
  AnswerTests: omnitest(correctExpr='z <- rep(NA, 1000)')
  Hint: Набери z <- rep(NA, 1000), щоб згенерувати вектор з 1000 NA.

- Class: cmd_question
  Output: Нарешті, вибери 100 елементів випадково з цих 2000 значень (об'єднуючи y і z) так, щоб ми не знали, скільки NA у нас буде або які позиції вони займатимуть у нашому кінцевому векторі -- my_data <- sample(c(y, z), 100).
  CorrectAnswer: my_data <- sample(c(y, z), 100)
  AnswerTests: omnitest(correctExpr='my_data <- sample(c(y, z), 100)')
  Hint: Функція sample() витягує випадкову вибірку з даних, наданих як перший аргумент (у цьому випадку c(y, z)) розміром, зазначеним другим аргументом (100). Команда my_data <- sample(c(y, z), 100) дасть нам те, що ми хочемо.

- Class: cmd_question
  Output: Спочатку поставимо питання про те, де розташовані наші NA в наших даних. Функція is.na() повідомляє нам, чи кожен елемент вектора є NA. Викличи is.na() на my_data і присвой результат my_na.
  CorrectAnswer: my_na <- is.na(my_data)
  AnswerTests: omnitest(correctExpr='my_na <- is.na(my_data)')
  Hint: Присвой результат is.na(my_data) змінній my_na.

- Class: cmd_question
  Output: Тепер виведи my_na, щоб побачити, що вийшло.
  CorrectAnswer: my_na
  AnswerTests: omnitest(correctExpr='my_na')
  Hint: Набери my_na, щоб переглянути її вміст.

- Class: text
  Output: Скрізь, де ти бачиш TRUE, ти знаєш, що відповідний елемент my_data є NA. Так само, скрізь, де ти бачиш FALSE, ти знаєш, що відповідний елемент my_data є одним з наших випадкових значень зі стандартного нормального розподілу.

- Class: cmd_question
  Output: У нашому попередньому обговоренні logical operators (логічних операторів) ми представили оператор `==` як метод перевірки рівності між двома об'єктами. Отже, ти можеш подумати, що вираз my_data == NA дає ті самі результати, що й is.na(). Спробуй це.
  CorrectAnswer: my_data == NA
  AnswerTests: omnitest(correctExpr='my_data == NA')
  Hint: Спробуй my_data == NA, щоб побачити, що станеться.

- Class: text
  Output: Причина, чому ти отримав вектор з усіх NA, полягає в тому, що NA насправді не є значенням, а лише placeholder (заповнювачем) для величини, яка недоступна. Тому logical expression (логічний вираз) є неповним, і R не має іншого вибору, крім як повернути вектор такої ж довжини, як my_data, який містить усі NA.

- Class: text
  Output: Не хвилюйся, якщо це трохи заплутано. Ключовий висновок полягає в тому, щоб бути обережним при використанні logical expressions (логічних виразів), коли NA можуть з'явитися, оскільки одне значення NA може зруйнувати всю систему.

- Class: text
  Output: Отже, повернемося до справи. Тепер, коли ми маємо вектор my_na, який має TRUE для кожного NA і FALSE для кожного числового значення, ми можемо обчислити загальну кількість NA в наших даних.

- Class: text
  Output: Секрет полягає в тому, щоб розпізнати, що всередині R представляє TRUE як число 1, а FALSE як число 0. Тому, якщо ми візьмемо суму багатьох TRUE і FALSE, ми отримаємо загальну кількість TRUE.

- Class: cmd_question
  Output: Спробуймо це тут. Викличи функцію sum() на my_na, щоб порахувати загальну кількість TRUE в my_na, і таким чином загальну кількість NA в my_data. Не присвоюй результат новій змінній.
  CorrectAnswer: sum(my_na)
  AnswerTests: omnitest(correctExpr='sum(my_na)')
  Hint: Використай sum(my_na), щоб порахувати кількість NA в даних.

- Class: cmd_question
  Output: Досить круто, правда? Нарешті, подивимося на дані, щоб переконатися, що все 'сходиться'. Виведи my_data на консоль.
  CorrectAnswer: my_data
  AnswerTests: omnitest(correctExpr='my_data')
  Hint: Виведи my_data на консоль.

- Class: cmd_question
  Output: Тепер, коли ми розібралися з NA, подивимося на другий тип пропущеного значення -- NaN, що означає 'not a number' (не число). Щоб згенерувати NaN, спробуй поділити (використовуючи пряму косу риску) 0 на 0 зараз.
  CorrectAnswer: 0/0
  AnswerTests: omnitest(correctExpr='0/0')
  Hint: Спробуй 0/0.

- Class: cmd_question
  Output: Зробимо ще один, просто для розваги. В R, Inf означає infinity (нескінченність). Що станеться, якщо ти віднімеш Inf від Inf?
  CorrectAnswer: Inf - Inf
  AnswerTests: omnitest(correctExpr='Inf - Inf')
  Hint: Набери Inf - Inf. Можеш вгадати результат?
  
- Class: mult_question
  Output: Чи хотів би ти повідомити комусь про успішне завершення цього уроку?
  CorrectAnswer: NULL
  AnswerChoices: Так; Ні
  AnswerTests: notify()
  Hint: NULL

